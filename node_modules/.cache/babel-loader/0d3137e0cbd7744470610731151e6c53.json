{"remainingRequest":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js!/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/theogilardo/Desktop/weather-app/src/store/index.js","dependencies":[{"path":"/Users/theogilardo/Desktop/weather-app/src/store/index.js","mtime":1594833687000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/theogilardo/Desktop/weather-app/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","cityWeather","minMaxTemp","cityFavorites","showFavorites","showFavoritesBtn","getters","getMinMaxTemp","getCityWeather","getTimeline","currentDay","map","el","date","currentFilter","filter","getWeekWeather","testArr","index","push","getShowFavorites","getShowFavoritesBtn","getCityFavorites","mutations","setCelsius","forEach","temperature","main","minmax","min","max","setFahrenheit","refreshCities","JSON","parse","localStorage","getItem","setCityWeather","payload","setminMaxTemp","addCityFavorite","newFavCity","name","location","country","img","image","setItem","stringify","setShowFavorites","setShowFavoritesBtn","length","removeCityFavorite","city","actions","fetchCityWeather","commit","fetch","response","json","data","weatherArr","days","responseImg","dataImg","cityImg","results","urls","raw","list","timestamp","dateApiFormatted","dt_txt","substring","timeApiFormatted","dayIndex","Date","getDay","weekDay","time","listAllDays","day","listDay","Set","minMaxList","i","findCurrentDayArr","minValue","temp_min","sort","a","b","maxValue","temp_max","minMaxDay","element","setTime","hours","getHours","minutes","getMinutes","substr","sunrise","sunset","temp","highlight","weather","description","id","pressure","humidity","cloudCoverage","clouds","all","windSpeed","wind","speed","sunTime","icon","alert","modules"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cityWeather: [],\n    minMaxTemp: [],\n    cityFavorites: [],\n    showFavorites: false,\n    showFavoritesBtn: false,\n  },\n  getters: {\n    getMinMaxTemp(state) {\n      return state.minMaxTemp;\n    },\n    getCityWeather(state) {\n      return state.cityWeather;\n    },\n    getTimeline(state) {\n      const currentDay = state.cityWeather.map((el) => el.date)[0];\n      const currentFilter = state.cityWeather.filter(\n        (el) => el.date === currentDay\n      );\n      return currentFilter;\n    },\n    getWeekWeather(state) {\n      const testArr = [];\n      state.cityWeather.map((el, index) => {\n        if (index === 0 || index % 8 === 0) {\n          testArr.push(el);\n        }\n      });\n\n      return testArr;\n    },\n    getShowFavorites(state) {\n      return state.showFavorites;\n    },\n    getShowFavoritesBtn(state) {\n      return state.showFavoritesBtn;\n    },\n    getCityFavorites(state) {\n      return state.cityFavorites;\n    },\n  },\n  mutations: {\n    setCelsius(state) {\n      state.cityWeather.forEach((el, index) => {\n        el.temperature.main = ((el.temperature.main - 32) * 5) / 9;\n        if (index === 0 || index % 8 === 0) {\n          el.temperature.minmax.min =\n            ((el.temperature.minmax.min - 32) * 5) / 9;\n          el.temperature.minmax.max =\n            ((el.temperature.minmax.max - 32) * 5) / 9;\n        }\n      });\n    },\n    setFahrenheit(state) {\n      state.cityWeather.forEach((el, index) => {\n        el.temperature.main = (el.temperature.main * 9) / 5 + 32;\n        if (index === 0 || index % 8 === 0) {\n          el.temperature.minmax.min = (el.temperature.minmax.min * 9) / 5 + 32;\n          el.temperature.minmax.max = (el.temperature.minmax.max * 9) / 5 + 32;\n        }\n      });\n    },\n    refreshCities(state) {\n      state.cityFavorites = JSON.parse(localStorage.getItem(\"cityFavorites\"));\n    },\n    setCityWeather(state, payload) {\n      state.cityWeather = payload;\n    },\n    setminMaxTemp(state, payload) {\n      state.minMaxTemp = payload;\n    },\n    addCityFavorite(state) {\n      const newFavCity = {\n        name: state.cityWeather[0].location.name,\n        country: state.cityWeather[0].location.country,\n        img: state.cityWeather[0].image,\n      };\n\n      state.cityFavorites.push(newFavCity);\n\n      localStorage.setItem(\n        \"cityFavorites\",\n        JSON.stringify(state.cityFavorites)\n      );\n    },\n    setShowFavorites(state) {\n      state.showFavorites = !state.showFavorites;\n    },\n    setShowFavoritesBtn(state) {\n      if (state.cityFavorites.length >= 1) {\n        state.showFavoritesBtn = true;\n      } else if (localStorage.getItem(\"cityFavorites\").length !== 2) {\n        state.showFavoritesBtn = true;\n      } else {\n        state.showFavoritesBtn = false;\n      }\n    },\n    removeCityFavorite(state, city) {\n      state.cityFavorites = state.cityFavorites.filter(\n        (el) => el.name !== city\n      );\n\n      localStorage.setItem(\n        \"cityFavorites\",\n        JSON.stringify(state.cityFavorites)\n      );\n\n      if (state.cityFavorites.length === 0) {\n        state.showFavoritesBtn = false;\n        state.showFavorites = false;\n      }\n    },\n  },\n  actions: {\n    async fetchCityWeather({ commit }, city) {\n      try {\n        const response = await fetch(\n          `http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=7e918318a291df997bd192ca77406428`\n        );\n        const data = await response.json();\n\n        const weatherArr = [];\n        const days = [\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n          \"Sunday\",\n        ];\n\n        // Set city photos\n        const responseImg = await fetch(\n          `https://api.unsplash.com/search/photos?query=${city}&client_id=WlqNLtGT_QMVB2xvS8oyVo6WRZpNf3CL8VSDC5syfVk`\n        );\n        const dataImg = await responseImg.json();\n        const cityImg = dataImg.results[0].urls.raw;\n\n        // Set Date for all\n        data.list.forEach((timestamp) => {\n          const dateApiFormatted = timestamp.dt_txt.substring(0, 10);\n          const timeApiFormatted = timestamp.dt_txt.substring(11, 16);\n          const dayIndex = new Date(dateApiFormatted).getDay();\n          const weekDay = dayIndex - 1 >= 0 ? days[dayIndex - 1] : days[6];\n          timestamp.dt_txt = weekDay;\n          timestamp.time = timeApiFormatted;\n        });\n\n        // Set Min/Max for each day\n        const listAllDays = data.list.map((day) => day.dt_txt);\n        const listDay = [...new Set(listAllDays)];\n\n        const minMaxList = {};\n\n        for (let i = 0; i < listDay.length; i++) {\n          const findCurrentDayArr = data.list.filter(\n            (timestamp) => timestamp.dt_txt === listDay[i]\n          );\n\n          const minValue = findCurrentDayArr\n            .map((day) => day.main.temp_min)\n            .sort((a, b) => a - b)[0];\n\n          const maxValue = findCurrentDayArr\n            .map((day) => day.main.temp_max)\n            .sort((a, b) => b - a)[0];\n\n          let minMaxDay = {};\n\n          minMaxDay = {\n            min: minValue - 273.15,\n            max: maxValue - 273.15,\n          };\n\n          minMaxList[`${listDay[i]}`] = minMaxDay;\n        }\n\n        data.list.map((element) => {\n          // Set time\n          function setTime(timestamp) {\n            const date = new Date(timestamp * 1000);\n            const hours = date.getHours();\n            const minutes = \"0\" + date.getMinutes();\n            return hours + \":\" + minutes.substr(-2);\n          }\n\n          const sunrise = setTime(data.city.sunrise);\n          const sunset = setTime(data.city.sunset);\n\n          const cityWeather = {\n            date: element.dt_txt,\n            time: element.time,\n            location: {\n              name: data.city.name,\n              country: data.city.country,\n            },\n            temperature: {\n              main: element.main.temp - 273.15,\n              minmax: minMaxList[element.dt_txt],\n            },\n            highlight: {\n              main: element.weather[0].main,\n              description: element.weather[0].description,\n              id: element.weather[0].id,\n              pressure: element.main.pressure,\n              humidity: element.main.humidity,\n              cloudCoverage: element.clouds.all,\n              windSpeed: element.wind.speed,\n            },\n            sunTime: {\n              sunrise,\n              sunset,\n            },\n            image: cityImg,\n            icon: element.weather[0].icon,\n          };\n\n          weatherArr.push(cityWeather);\n        });\n\n        commit(\"setCityWeather\", weatherArr);\n      } catch (error) {\n        alert(\"Please enter a valid city.\");\n      }\n    },\n  },\n  modules: {},\n});\n"]}]}