{"remainingRequest":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js!/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/theogilardo/Desktop/weather-app/src/store/index.js","dependencies":[{"path":"/Users/theogilardo/Desktop/weather-app/src/store/index.js","mtime":1594373672000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvdGhlb2dpbGFyZG8vRGVza3RvcC93ZWF0aGVyLWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFZ1ZXggZnJvbSAidnVleCI7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgY2l0eVdlYXRoZXI6IFtdCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBjaXR5V2VhdGhlcjogZnVuY3Rpb24gY2l0eVdlYXRoZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmNpdHlXZWF0aGVyOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBzZXRDaXR5V2VhdGhlcjogZnVuY3Rpb24gc2V0Q2l0eVdlYXRoZXIoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUuY2l0eVdlYXRoZXIgPSBwYXlsb2FkOwogICAgICBjb25zb2xlLmxvZyhzdGF0ZS5jaXR5V2VhdGhlcik7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBmZXRjaENpdHlXZWF0aGVyOiBmdW5jdGlvbiBmZXRjaENpdHlXZWF0aGVyKF9yZWYsIGNpdHkpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCByZXNwb25zZSwgZGF0YSwgd2VhdGhlckFycjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS9mb3JlY2FzdD9xPSIuY29uY2F0KGNpdHksICImYXBwaWQ9N2U5MTgzMThhMjkxZGY5OTdiZDE5MmNhNzc0MDY0MjgiKSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAvLyBmdW5jdGlvbiBjb252ZXJ0VG9DZWxjaXVzKGtlbHZpbikgewogICAgICAgICAgICAgICAgLy8gICByZXR1cm4gTWF0aC5yb3VuZChrZWx2aW4gLSAyNzMuMTUpOwogICAgICAgICAgICAgICAgLy8gfQogICAgICAgICAgICAgICAgd2VhdGhlckFyciA9IFtdOwogICAgICAgICAgICAgICAgZGF0YS5saXN0Lm1hcChmdW5jdGlvbiAoZWxlbWVudCwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgdmFyIGRhdGVBcGlGb3JtYXR0ZWQgPSBlbGVtZW50LmR0X3R4dC5zdWJzdHJpbmcoMCwgMTApOwogICAgICAgICAgICAgICAgICB2YXIgZGF5SW5kZXggPSBuZXcgRGF0ZShkYXRlQXBpRm9ybWF0dGVkKS5nZXREYXkoKTsKICAgICAgICAgICAgICAgICAgdmFyIGRheXMgPSBbIk1vbmRheSIsICJUdWVzZGF5IiwgIldlZG5lc2RheSIsICJUaHVyc2RheSIsICJGcmlkYXkiLCAiU2F0dXJkYXkiLCAiU3VuZGF5Il07CiAgICAgICAgICAgICAgICAgIHZhciB3ZWVrRGF5ID0gZGF5SW5kZXggLSAxID49IDAgPyBkYXlzW2RheUluZGV4IC0gMV0gOiBkYXlzWzZdOwoKICAgICAgICAgICAgICAgICAgaWYgKGluZGV4ID09PSAwIHx8IGluZGV4ICUgOCA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGluZGV4KTsKICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhlbGVtZW50LmR0X3R4dCk7CiAgICAgICAgICAgICAgICAgICAgdmFyIGNpdHlXZWF0aGVyID0gewogICAgICAgICAgICAgICAgICAgICAgZGF0ZTogd2Vla0RheSwKICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGRhdGEuY2l0eS5uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5OiBkYXRhLmNpdHkuY291bnRyeQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIHRlbXBlcmF0dXJlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1haW46IGVsZW1lbnQubWFpbi50ZW1wLAogICAgICAgICAgICAgICAgICAgICAgICBtaW46IGVsZW1lbnQubWFpbi50ZW1wX21pbiwKICAgICAgICAgICAgICAgICAgICAgICAgbWF4OiBlbGVtZW50Lm1haW4udGVtcF9tYXggLy8gbWFpbjogY29udmVydFRvQ2VsY2l1cyhlbGVtZW50Lm1haW4udGVtcCksCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG1pbjogY29udmVydFRvQ2VsY2l1cyhlbGVtZW50Lm1haW4udGVtcF9taW4pLAogICAgICAgICAgICAgICAgICAgICAgICAvLyBtYXg6IGNvbnZlcnRUb0NlbGNpdXMoZWxlbWVudC5tYWluLnRlbXBfbWF4KSwKCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0OiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1haW46IGVsZW1lbnQud2VhdGhlclswXS5tYWluLAogICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogZWxlbWVudC53ZWF0aGVyWzBdLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgICAgICAgICBpZDogZWxlbWVudC53ZWF0aGVyWzBdLmlkLAogICAgICAgICAgICAgICAgICAgICAgICBwcmVzc3VyZTogZWxlbWVudC5tYWluLnByZXNzdXJlLAogICAgICAgICAgICAgICAgICAgICAgICBodW1pZGl0eTogZWxlbWVudC5tYWluLmh1bWlkaXR5LAogICAgICAgICAgICAgICAgICAgICAgICBjbG91ZENvdmVyYWdlOiBlbGVtZW50LmNsb3Vkcy5hbGwsCiAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRTcGVlZDogZWxlbWVudC53aW5kLnNwZWVkCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgaWNvbjogImh0dHA6Ly9vcGVud2VhdGhlcm1hcC5vcmcvaW1nL3cvIi5jb25jYXQoZWxlbWVudC53ZWF0aGVyWzBdLmljb24sICIucG5nIikKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIHdlYXRoZXJBcnIucHVzaChjaXR5V2VhdGhlcik7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXRDaXR5V2VhdGhlciIsIHdlYXRoZXJBcnIpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW9kdWxlczoge30KfSk7"},{"version":3,"sources":["/Users/theogilardo/Desktop/weather-app/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","cityWeather","getters","mutations","setCityWeather","payload","console","log","actions","fetchCityWeather","city","commit","fetch","response","json","data","weatherArr","list","map","element","index","dateApiFormatted","dt_txt","substring","dayIndex","Date","getDay","days","weekDay","date","location","name","country","temperature","main","temp","min","temp_min","max","temp_max","highlight","weather","description","id","pressure","humidity","cloudCoverage","clouds","all","windSpeed","wind","speed","icon","push","modules"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GADqB;AAI5BC,EAAAA,OAAO,EAAE;AACPD,IAAAA,WADO,uBACKD,KADL,EACY;AACjB,aAAOA,KAAK,CAACC,WAAb;AACD;AAHM,GAJmB;AAS5BE,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMJ,KADN,EACaK,OADb,EACsB;AAC7BL,MAAAA,KAAK,CAACC,WAAN,GAAoBI,OAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACC,WAAlB;AACD;AAJQ,GATiB;AAe5BO,EAAAA,OAAO,EAAE;AACDC,IAAAA,gBADC,kCAC4BC,IAD5B,EACkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBC,gBAAAA,MAAgB,QAAhBA,MAAgB;AAAA;AAAA,uBAChBC,KAAK,6DAC2BF,IAD3B,6CADW;;AAAA;AACjCG,gBAAAA,QADiC;AAAA;AAAA,uBAIpBA,QAAQ,CAACC,IAAT,EAJoB;;AAAA;AAIjCC,gBAAAA,IAJiC;AAMvC;AACA;AACA;AAEMC,gBAAAA,UAViC,GAUpB,EAVoB;AAYvCD,gBAAAA,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAc,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAChC,sBAAMC,gBAAgB,GAAGF,OAAO,CAACG,MAAR,CAAeC,SAAf,CAAyB,CAAzB,EAA4B,EAA5B,CAAzB;AACA,sBAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASJ,gBAAT,EAA2BK,MAA3B,EAAjB;AACA,sBAAMC,IAAI,GAAG,CACX,QADW,EAEX,SAFW,EAGX,WAHW,EAIX,UAJW,EAKX,QALW,EAMX,UANW,EAOX,QAPW,CAAb;AAUA,sBAAMC,OAAO,GAAGJ,QAAQ,GAAG,CAAX,IAAgB,CAAhB,GAAoBG,IAAI,CAACH,QAAQ,GAAG,CAAZ,CAAxB,GAAyCG,IAAI,CAAC,CAAD,CAA7D;;AAEA,sBAAIP,KAAK,KAAK,CAAV,IAAeA,KAAK,GAAG,CAAR,KAAc,CAAjC,EAAoC;AAClC;AACA;AAEA,wBAAMnB,WAAW,GAAG;AAClB4B,sBAAAA,IAAI,EAAED,OADY;AAElBE,sBAAAA,QAAQ,EAAE;AACRC,wBAAAA,IAAI,EAAEhB,IAAI,CAACL,IAAL,CAAUqB,IADR;AAERC,wBAAAA,OAAO,EAAEjB,IAAI,CAACL,IAAL,CAAUsB;AAFX,uBAFQ;AAOlBC,sBAAAA,WAAW,EAAE;AACXC,wBAAAA,IAAI,EAAEf,OAAO,CAACe,IAAR,CAAaC,IADR;AAEXC,wBAAAA,GAAG,EAAEjB,OAAO,CAACe,IAAR,CAAaG,QAFP;AAGXC,wBAAAA,GAAG,EAAEnB,OAAO,CAACe,IAAR,CAAaK,QAHP,CAIX;AACA;AACA;;AANW,uBAPK;AAgBlBC,sBAAAA,SAAS,EAAE;AACTN,wBAAAA,IAAI,EAAEf,OAAO,CAACsB,OAAR,CAAgB,CAAhB,EAAmBP,IADhB;AAETQ,wBAAAA,WAAW,EAAEvB,OAAO,CAACsB,OAAR,CAAgB,CAAhB,EAAmBC,WAFvB;AAGTC,wBAAAA,EAAE,EAAExB,OAAO,CAACsB,OAAR,CAAgB,CAAhB,EAAmBE,EAHd;AAITC,wBAAAA,QAAQ,EAAEzB,OAAO,CAACe,IAAR,CAAaU,QAJd;AAKTC,wBAAAA,QAAQ,EAAE1B,OAAO,CAACe,IAAR,CAAaW,QALd;AAMTC,wBAAAA,aAAa,EAAE3B,OAAO,CAAC4B,MAAR,CAAeC,GANrB;AAOTC,wBAAAA,SAAS,EAAE9B,OAAO,CAAC+B,IAAR,CAAaC;AAPf,uBAhBO;AAyBlBC,sBAAAA,IAAI,4CAAqCjC,OAAO,CAACsB,OAAR,CAAgB,CAAhB,EAAmBW,IAAxD;AAzBc,qBAApB;AA4BApC,oBAAAA,UAAU,CAACqC,IAAX,CAAgBpD,WAAhB;AACD;AACF,iBAjDD;AAmDAU,gBAAAA,MAAM,CAAC,gBAAD,EAAmBK,UAAnB,CAAN;;AA/DuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgExC;AAjEM,GAfmB;AAkF5BsC,EAAAA,OAAO,EAAE;AAlFmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cityWeather: [],\n  },\n  getters: {\n    cityWeather(state) {\n      return state.cityWeather;\n    },\n  },\n  mutations: {\n    setCityWeather(state, payload) {\n      state.cityWeather = payload;\n      console.log(state.cityWeather);\n    },\n  },\n  actions: {\n    async fetchCityWeather({ commit }, city) {\n      const response = await fetch(\n        `http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=7e918318a291df997bd192ca77406428`\n      );\n      const data = await response.json();\n\n      // function convertToCelcius(kelvin) {\n      //   return Math.round(kelvin - 273.15);\n      // }\n\n      const weatherArr = [];\n\n      data.list.map((element, index) => {\n        const dateApiFormatted = element.dt_txt.substring(0, 10);\n        const dayIndex = new Date(dateApiFormatted).getDay();\n        const days = [\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n          \"Sunday\",\n        ];\n\n        const weekDay = dayIndex - 1 >= 0 ? days[dayIndex - 1] : days[6];\n\n        if (index === 0 || index % 8 === 0) {\n          // console.log(index);\n          // console.log(element.dt_txt);\n\n          const cityWeather = {\n            date: weekDay,\n            location: {\n              name: data.city.name,\n              country: data.city.country,\n            },\n\n            temperature: {\n              main: element.main.temp,\n              min: element.main.temp_min,\n              max: element.main.temp_max,\n              // main: convertToCelcius(element.main.temp),\n              // min: convertToCelcius(element.main.temp_min),\n              // max: convertToCelcius(element.main.temp_max),\n            },\n\n            highlight: {\n              main: element.weather[0].main,\n              description: element.weather[0].description,\n              id: element.weather[0].id,\n              pressure: element.main.pressure,\n              humidity: element.main.humidity,\n              cloudCoverage: element.clouds.all,\n              windSpeed: element.wind.speed,\n            },\n            icon: `http://openweathermap.org/img/w/${element.weather[0].icon}.png`,\n          };\n\n          weatherArr.push(cityWeather);\n        }\n      });\n\n      commit(\"setCityWeather\", weatherArr);\n    },\n  },\n  modules: {},\n});\n"]}]}