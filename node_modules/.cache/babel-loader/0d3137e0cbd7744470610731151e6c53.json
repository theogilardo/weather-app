{"remainingRequest":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js!/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/theogilardo/Desktop/weather-app/src/store/index.js","dependencies":[{"path":"/Users/theogilardo/Desktop/weather-app/src/store/index.js","mtime":1594307475000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy90aGVvZ2lsYXJkby9EZXNrdG9wL3dlYXRoZXItYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVleCBmcm9tICJ2dWV4IjsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICBjaXR5V2VhdGhlcjogW10KICB9LAogIGdldHRlcnM6IHsKICAgIGNpdHlXZWF0aGVyOiBmdW5jdGlvbiBjaXR5V2VhdGhlcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY2l0eVdlYXRoZXI7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldENpdHlXZWF0aGVyOiBmdW5jdGlvbiBzZXRDaXR5V2VhdGhlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5jaXR5V2VhdGhlciA9IHBheWxvYWQ7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBmZXRjaENpdHlXZWF0aGVyOiBmdW5jdGlvbiBmZXRjaENpdHlXZWF0aGVyKF9yZWYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCByZXNwb25zZSwgZGF0YSwgY2l0eVdlYXRoZXI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCggLy8gYGh0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9bG9uZG9uJnVuaXRzPW1ldHJpYyZhcHBpZD03ZTkxODMxOGEyOTFkZjk5N2JkMTkyY2E3NzQwNjQyOGAKICAgICAgICAgICAgICAgICJodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS9mb3JlY2FzdD9xPWxvbmRvbiZhcHBpZD03ZTkxODMxOGEyOTFkZjk5N2JkMTkyY2E3NzQwNjQyOCIpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgY2l0eVdlYXRoZXIgPSB7CiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkYXRhLmxpc3RbMF0ud2VhdGhlclswXS5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgd2VhdGhlclN0YXRlOiBkYXRhLmxpc3RbMF0ud2VhdGhlclswXS5tYWluLAogICAgICAgICAgICAgICAgICBpZDogZGF0YS5saXN0WzBdLndlYXRoZXJbMF0uaWQsCiAgICAgICAgICAgICAgICAgIHRlbXBlcmF0dXJlOiBkYXRhLmxpc3RbMF0ubWFpbi50ZW1wLAogICAgICAgICAgICAgICAgICB0ZW1wTWluOiBkYXRhLmxpc3RbMF0ubWFpbi50ZW1wX21pbiwKICAgICAgICAgICAgICAgICAgdGVtcE1heDogZGF0YS5saXN0WzBdLm1haW4udGVtcF9tYXgsCiAgICAgICAgICAgICAgICAgIHByZXNzdXJlOiBkYXRhLmxpc3RbMF0ubWFpbi5wcmVzc3VyZSwKICAgICAgICAgICAgICAgICAgaHVtaWRpdHk6IGRhdGEubGlzdFswXS5tYWluLmh1bWlkaXR5LAogICAgICAgICAgICAgICAgICBkYXRlOiBkYXRhLmxpc3RbMF0uZHRfdHh0CiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coY2l0eVdlYXRoZXIpOwogICAgICAgICAgICAgICAgY29tbWl0KCJzZXRDaXR5V2VhdGhlciIsIGNpdHlXZWF0aGVyKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"sources":["/Users/theogilardo/Desktop/weather-app/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","cityWeather","getters","mutations","setCityWeather","payload","actions","fetchCityWeather","commit","fetch","response","json","data","description","list","weather","weatherState","main","id","temperature","temp","tempMin","temp_min","tempMax","temp_max","pressure","humidity","date","dt_txt","console","log","modules"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GADqB;AAI5BC,EAAAA,OAAO,EAAE;AACPD,IAAAA,WADO,uBACKD,KADL,EACY;AACjB,aAAOA,KAAK,CAACC,WAAb;AACD;AAHM,GAJmB;AAS5BE,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMJ,KADN,EACaK,OADb,EACsB;AAC7BL,MAAAA,KAAK,CAACC,WAAN,GAAoBI,OAApB;AACD;AAHQ,GATiB;AAc5BC,EAAAA,OAAO,EAAE;AACDC,IAAAA,gBADC,kCAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAVC,gBAAAA,MAAU,QAAVA,MAAU;AAAA;AAAA,uBACVC,KAAK,EAC1B;AAD0B,kHADK;;AAAA;AAC3BC,gBAAAA,QAD2B;AAAA;AAAA,uBAKdA,QAAQ,CAACC,IAAT,EALc;;AAAA;AAK3BC,gBAAAA,IAL2B;AAO3BX,gBAAAA,WAP2B,GAOb;AAClBY,kBAAAA,WAAW,EAAED,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaC,OAAb,CAAqB,CAArB,EAAwBF,WADnB;AAElBG,kBAAAA,YAAY,EAAEJ,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaC,OAAb,CAAqB,CAArB,EAAwBE,IAFpB;AAGlBC,kBAAAA,EAAE,EAAEN,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaC,OAAb,CAAqB,CAArB,EAAwBG,EAHV;AAIlBC,kBAAAA,WAAW,EAAEP,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaG,IAAb,CAAkBG,IAJb;AAKlBC,kBAAAA,OAAO,EAAET,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaG,IAAb,CAAkBK,QALT;AAMlBC,kBAAAA,OAAO,EAAEX,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaG,IAAb,CAAkBO,QANT;AAOlBC,kBAAAA,QAAQ,EAAEb,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaG,IAAb,CAAkBQ,QAPV;AAQlBC,kBAAAA,QAAQ,EAAEd,IAAI,CAACE,IAAL,CAAU,CAAV,EAAaG,IAAb,CAAkBS,QARV;AASlBC,kBAAAA,IAAI,EAAEf,IAAI,CAACE,IAAL,CAAU,CAAV,EAAac;AATD,iBAPa;AAmBjCC,gBAAAA,OAAO,CAACC,GAAR,CAAY7B,WAAZ;AAEAO,gBAAAA,MAAM,CAAC,gBAAD,EAAmBP,WAAnB,CAAN;;AArBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBlC;AAvBM,GAdmB;AAuC5B8B,EAAAA,OAAO,EAAE;AAvCmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cityWeather: [],\n  },\n  getters: {\n    cityWeather(state) {\n      return state.cityWeather;\n    },\n  },\n  mutations: {\n    setCityWeather(state, payload) {\n      state.cityWeather = payload;\n    },\n  },\n  actions: {\n    async fetchCityWeather({ commit }) {\n      const response = await fetch(\n        // `https://api.openweathermap.org/data/2.5/weather?q=london&units=metric&appid=7e918318a291df997bd192ca77406428`\n        `http://api.openweathermap.org/data/2.5/forecast?q=london&appid=7e918318a291df997bd192ca77406428`\n      );\n      const data = await response.json();\n\n      const cityWeather = {\n        description: data.list[0].weather[0].description,\n        weatherState: data.list[0].weather[0].main,\n        id: data.list[0].weather[0].id,\n        temperature: data.list[0].main.temp,\n        tempMin: data.list[0].main.temp_min,\n        tempMax: data.list[0].main.temp_max,\n        pressure: data.list[0].main.pressure,\n        humidity: data.list[0].main.humidity,\n        date: data.list[0].dt_txt,\n      };\n\n      console.log(cityWeather);\n\n      commit(\"setCityWeather\", cityWeather);\n    },\n  },\n  modules: {},\n});\n"]}]}