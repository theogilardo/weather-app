{"remainingRequest":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js!/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/theogilardo/Desktop/weather-app/src/store/index.js","dependencies":[{"path":"/Users/theogilardo/Desktop/weather-app/src/store/index.js","mtime":1594399309000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvdGhlb2dpbGFyZG8vRGVza3RvcC93ZWF0aGVyLWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBWdWUgZnJvbSAidnVlIjsKaW1wb3J0IFZ1ZXggZnJvbSAidnVleCI7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCBkZWZhdWx0IG5ldyBWdWV4LlN0b3JlKHsKICBzdGF0ZTogewogICAgY2l0eVdlYXRoZXI6IFtdLAogICAgY2l0eUZhdm9yaXRlczogW10sCiAgICBzaG93RmF2b3JpdGVzOiBmYWxzZQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0Q2l0eVdlYXRoZXI6IGZ1bmN0aW9uIGdldENpdHlXZWF0aGVyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jaXR5V2VhdGhlcjsKICAgIH0sCiAgICBnZXRTaG93RmF2b3JpdGVzOiBmdW5jdGlvbiBnZXRTaG93RmF2b3JpdGVzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5zaG93RmF2b3JpdGVzOwogICAgfSwKICAgIGdldENpdHlGYXZvcml0ZXM6IGZ1bmN0aW9uIGdldENpdHlGYXZvcml0ZXMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmNpdHlGYXZvcml0ZXM7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldENpdHlXZWF0aGVyOiBmdW5jdGlvbiBzZXRDaXR5V2VhdGhlcihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5jaXR5V2VhdGhlciA9IHBheWxvYWQ7IC8vIGNvbnNvbGUubG9nKHN0YXRlLmNpdHlXZWF0aGVyKTsKICAgIH0sCiAgICBhZGRDaXR5RmF2b3JpdGU6IGZ1bmN0aW9uIGFkZENpdHlGYXZvcml0ZShzdGF0ZSkgewogICAgICB2YXIgbmV3RmF2Q2l0eSA9IHsKICAgICAgICBuYW1lOiBzdGF0ZS5jaXR5V2VhdGhlclswXS5sb2NhdGlvbi5uYW1lLAogICAgICAgIGNvdW50cnk6IHN0YXRlLmNpdHlXZWF0aGVyWzBdLmxvY2F0aW9uLmNvdW50cnkKICAgICAgfTsKICAgICAgc3RhdGUuY2l0eUZhdm9yaXRlcy5wdXNoKG5ld0ZhdkNpdHkpOwogICAgICBjb25zb2xlLmxvZyhzdGF0ZS5jaXR5RmF2b3JpdGVzKTsKICAgICAgY29uc29sZS5sb2coc3RhdGUuY2l0eUZhdm9yaXRlcy5tYXAoZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgcmV0dXJuIGVsLm5hbWU7CiAgICAgIH0pKTsgLy8gbG9jYWxTdG9yYWdlLnNldEl0ZW0oCiAgICAgIC8vICAgImNpdHlGYXZvcml0ZXMiLAogICAgICAvLyAgIEpTT04uc3RyaW5naWZ5KHN0YXRlLmNpdHlGYXZvcml0ZXMpCiAgICAgIC8vICk7CiAgICAgIC8vIHN0YXRlLmNpdHlGYXZvcml0ZXMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJjaXR5RmF2b3JpdGVzIikpOwogICAgfSwKICAgIHNldFNob3dGYXZvcml0ZXM6IGZ1bmN0aW9uIHNldFNob3dGYXZvcml0ZXMoc3RhdGUpIHsKICAgICAgc3RhdGUuc2hvd0Zhdm9yaXRlcyA9ICFzdGF0ZS5zaG93RmF2b3JpdGVzOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgZmV0Y2hDaXR5V2VhdGhlcjogZnVuY3Rpb24gZmV0Y2hDaXR5V2VhdGhlcihfcmVmLCBjaXR5KSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2UsIGRhdGEsIHdlYXRoZXJBcnI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvZm9yZWNhc3Q/cT0iLmNvbmNhdChjaXR5LCAiJmFwcGlkPTdlOTE4MzE4YTI5MWRmOTk3YmQxOTJjYTc3NDA2NDI4IikpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgLy8gZnVuY3Rpb24gY29udmVydFRvQ2VsY2l1cyhrZWx2aW4pIHsKICAgICAgICAgICAgICAgIC8vICAgcmV0dXJuIE1hdGgucm91bmQoa2VsdmluIC0gMjczLjE1KTsKICAgICAgICAgICAgICAgIC8vIH0KICAgICAgICAgICAgICAgIHdlYXRoZXJBcnIgPSBbXTsKICAgICAgICAgICAgICAgIGRhdGEubGlzdC5tYXAoZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4KSB7CiAgICAgICAgICAgICAgICAgIHZhciBkYXRlQXBpRm9ybWF0dGVkID0gZWxlbWVudC5kdF90eHQuc3Vic3RyaW5nKDAsIDEwKTsKICAgICAgICAgICAgICAgICAgdmFyIGRheUluZGV4ID0gbmV3IERhdGUoZGF0ZUFwaUZvcm1hdHRlZCkuZ2V0RGF5KCk7CiAgICAgICAgICAgICAgICAgIHZhciBkYXlzID0gWyJNb25kYXkiLCAiVHVlc2RheSIsICJXZWRuZXNkYXkiLCAiVGh1cnNkYXkiLCAiRnJpZGF5IiwgIlNhdHVyZGF5IiwgIlN1bmRheSJdOwogICAgICAgICAgICAgICAgICB2YXIgd2Vla0RheSA9IGRheUluZGV4IC0gMSA+PSAwID8gZGF5c1tkYXlJbmRleCAtIDFdIDogZGF5c1s2XTsKCiAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PT0gMCB8fCBpbmRleCAlIDggPT09IDApIHsKICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhpbmRleCk7CiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZWxlbWVudC5kdF90eHQpOwogICAgICAgICAgICAgICAgICAgIHZhciBjaXR5V2VhdGhlciA9IHsKICAgICAgICAgICAgICAgICAgICAgIGRhdGU6IHdlZWtEYXksCiAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbjogewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBkYXRhLmNpdHkubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgY291bnRyeTogZGF0YS5jaXR5LmNvdW50cnkKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICB0ZW1wZXJhdHVyZTogewogICAgICAgICAgICAgICAgICAgICAgICBtYWluOiBlbGVtZW50Lm1haW4udGVtcCwKICAgICAgICAgICAgICAgICAgICAgICAgbWluOiBlbGVtZW50Lm1haW4udGVtcF9taW4sCiAgICAgICAgICAgICAgICAgICAgICAgIG1heDogZWxlbWVudC5tYWluLnRlbXBfbWF4IC8vIG1haW46IGNvbnZlcnRUb0NlbGNpdXMoZWxlbWVudC5tYWluLnRlbXApLAogICAgICAgICAgICAgICAgICAgICAgICAvLyBtaW46IGNvbnZlcnRUb0NlbGNpdXMoZWxlbWVudC5tYWluLnRlbXBfbWluKSwKICAgICAgICAgICAgICAgICAgICAgICAgLy8gbWF4OiBjb252ZXJ0VG9DZWxjaXVzKGVsZW1lbnQubWFpbi50ZW1wX21heCksCgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodDogewogICAgICAgICAgICAgICAgICAgICAgICBtYWluOiBlbGVtZW50LndlYXRoZXJbMF0ubWFpbiwKICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGVsZW1lbnQud2VhdGhlclswXS5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGVsZW1lbnQud2VhdGhlclswXS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgcHJlc3N1cmU6IGVsZW1lbnQubWFpbi5wcmVzc3VyZSwKICAgICAgICAgICAgICAgICAgICAgICAgaHVtaWRpdHk6IGVsZW1lbnQubWFpbi5odW1pZGl0eSwKICAgICAgICAgICAgICAgICAgICAgICAgY2xvdWRDb3ZlcmFnZTogZWxlbWVudC5jbG91ZHMuYWxsLAogICAgICAgICAgICAgICAgICAgICAgICB3aW5kU3BlZWQ6IGVsZW1lbnQud2luZC5zcGVlZAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGljb246ICJodHRwOi8vb3BlbndlYXRoZXJtYXAub3JnL2ltZy93LyIuY29uY2F0KGVsZW1lbnQud2VhdGhlclswXS5pY29uLCAiLnBuZyIpCiAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICB3ZWF0aGVyQXJyLnB1c2goY2l0eVdlYXRoZXIpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbW1pdCgic2V0Q2l0eVdlYXRoZXIiLCB3ZWF0aGVyQXJyKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG1vZHVsZXM6IHt9Cn0pOw=="},{"version":3,"sources":["/Users/theogilardo/Desktop/weather-app/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","cityWeather","cityFavorites","showFavorites","getters","getCityWeather","getShowFavorites","getCityFavorites","mutations","setCityWeather","payload","addCityFavorite","newFavCity","name","location","country","push","console","log","map","el","setShowFavorites","actions","fetchCityWeather","city","commit","fetch","response","json","data","weatherArr","list","element","index","dateApiFormatted","dt_txt","substring","dayIndex","Date","getDay","days","weekDay","date","temperature","main","temp","min","temp_min","max","temp_max","highlight","weather","description","id","pressure","humidity","cloudCoverage","clouds","all","windSpeed","wind","speed","icon","modules"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE,EADR;AAELC,IAAAA,aAAa,EAAE,EAFV;AAGLC,IAAAA,aAAa,EAAE;AAHV,GADqB;AAM5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,0BACQL,KADR,EACe;AACpB,aAAOA,KAAK,CAACC,WAAb;AACD,KAHM;AAIPK,IAAAA,gBAJO,4BAIUN,KAJV,EAIiB;AACtB,aAAOA,KAAK,CAACG,aAAb;AACD,KANM;AAOPI,IAAAA,gBAPO,4BAOUP,KAPV,EAOiB;AACtB,aAAOA,KAAK,CAACE,aAAb;AACD;AATM,GANmB;AAiB5BM,EAAAA,SAAS,EAAE;AACTC,IAAAA,cADS,0BACMT,KADN,EACaU,OADb,EACsB;AAC7BV,MAAAA,KAAK,CAACC,WAAN,GAAoBS,OAApB,CAD6B,CAE7B;AACD,KAJQ;AAKTC,IAAAA,eALS,2BAKOX,KALP,EAKc;AACrB,UAAMY,UAAU,GAAG;AACjBC,QAAAA,IAAI,EAAEb,KAAK,CAACC,WAAN,CAAkB,CAAlB,EAAqBa,QAArB,CAA8BD,IADnB;AAEjBE,QAAAA,OAAO,EAAEf,KAAK,CAACC,WAAN,CAAkB,CAAlB,EAAqBa,QAArB,CAA8BC;AAFtB,OAAnB;AAKAf,MAAAA,KAAK,CAACE,aAAN,CAAoBc,IAApB,CAAyBJ,UAAzB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACE,aAAlB;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACE,aAAN,CAAoBiB,GAApB,CAAwB,UAACC,EAAD;AAAA,eAAQA,EAAE,CAACP,IAAX;AAAA,OAAxB,CAAZ,EARqB,CAUrB;AACA;AACA;AACA;AACA;AACD,KApBQ;AAqBTQ,IAAAA,gBArBS,4BAqBQrB,KArBR,EAqBe;AACtBA,MAAAA,KAAK,CAACG,aAAN,GAAsB,CAACH,KAAK,CAACG,aAA7B;AACD;AAvBQ,GAjBiB;AA0C5BmB,EAAAA,OAAO,EAAE;AACDC,IAAAA,gBADC,kCAC4BC,IAD5B,EACkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhBC,gBAAAA,MAAgB,QAAhBA,MAAgB;AAAA;AAAA,uBAChBC,KAAK,6DAC2BF,IAD3B,6CADW;;AAAA;AACjCG,gBAAAA,QADiC;AAAA;AAAA,uBAIpBA,QAAQ,CAACC,IAAT,EAJoB;;AAAA;AAIjCC,gBAAAA,IAJiC;AAMvC;AACA;AACA;AAEMC,gBAAAA,UAViC,GAUpB,EAVoB;AAYvCD,gBAAAA,IAAI,CAACE,IAAL,CAAUZ,GAAV,CAAc,UAACa,OAAD,EAAUC,KAAV,EAAoB;AAChC,sBAAMC,gBAAgB,GAAGF,OAAO,CAACG,MAAR,CAAeC,SAAf,CAAyB,CAAzB,EAA4B,EAA5B,CAAzB;AACA,sBAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASJ,gBAAT,EAA2BK,MAA3B,EAAjB;AACA,sBAAMC,IAAI,GAAG,CACX,QADW,EAEX,SAFW,EAGX,WAHW,EAIX,UAJW,EAKX,QALW,EAMX,UANW,EAOX,QAPW,CAAb;AAUA,sBAAMC,OAAO,GAAGJ,QAAQ,GAAG,CAAX,IAAgB,CAAhB,GAAoBG,IAAI,CAACH,QAAQ,GAAG,CAAZ,CAAxB,GAAyCG,IAAI,CAAC,CAAD,CAA7D;;AAEA,sBAAIP,KAAK,KAAK,CAAV,IAAeA,KAAK,GAAG,CAAR,KAAc,CAAjC,EAAoC;AAClC;AACA;AAEA,wBAAMhC,WAAW,GAAG;AAClByC,sBAAAA,IAAI,EAAED,OADY;AAElB3B,sBAAAA,QAAQ,EAAE;AACRD,wBAAAA,IAAI,EAAEgB,IAAI,CAACL,IAAL,CAAUX,IADR;AAERE,wBAAAA,OAAO,EAAEc,IAAI,CAACL,IAAL,CAAUT;AAFX,uBAFQ;AAOlB4B,sBAAAA,WAAW,EAAE;AACXC,wBAAAA,IAAI,EAAEZ,OAAO,CAACY,IAAR,CAAaC,IADR;AAEXC,wBAAAA,GAAG,EAAEd,OAAO,CAACY,IAAR,CAAaG,QAFP;AAGXC,wBAAAA,GAAG,EAAEhB,OAAO,CAACY,IAAR,CAAaK,QAHP,CAIX;AACA;AACA;;AANW,uBAPK;AAgBlBC,sBAAAA,SAAS,EAAE;AACTN,wBAAAA,IAAI,EAAEZ,OAAO,CAACmB,OAAR,CAAgB,CAAhB,EAAmBP,IADhB;AAETQ,wBAAAA,WAAW,EAAEpB,OAAO,CAACmB,OAAR,CAAgB,CAAhB,EAAmBC,WAFvB;AAGTC,wBAAAA,EAAE,EAAErB,OAAO,CAACmB,OAAR,CAAgB,CAAhB,EAAmBE,EAHd;AAITC,wBAAAA,QAAQ,EAAEtB,OAAO,CAACY,IAAR,CAAaU,QAJd;AAKTC,wBAAAA,QAAQ,EAAEvB,OAAO,CAACY,IAAR,CAAaW,QALd;AAMTC,wBAAAA,aAAa,EAAExB,OAAO,CAACyB,MAAR,CAAeC,GANrB;AAOTC,wBAAAA,SAAS,EAAE3B,OAAO,CAAC4B,IAAR,CAAaC;AAPf,uBAhBO;AAyBlBC,sBAAAA,IAAI,4CAAqC9B,OAAO,CAACmB,OAAR,CAAgB,CAAhB,EAAmBW,IAAxD;AAzBc,qBAApB;AA4BAhC,oBAAAA,UAAU,CAACd,IAAX,CAAgBf,WAAhB;AACD;AACF,iBAjDD;AAmDAwB,gBAAAA,MAAM,CAAC,gBAAD,EAAmBK,UAAnB,CAAN;;AA/DuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgExC;AAjEM,GA1CmB;AA6G5BiC,EAAAA,OAAO,EAAE;AA7GmB,CAAf,CAAf","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cityWeather: [],\n    cityFavorites: [],\n    showFavorites: false,\n  },\n  getters: {\n    getCityWeather(state) {\n      return state.cityWeather;\n    },\n    getShowFavorites(state) {\n      return state.showFavorites;\n    },\n    getCityFavorites(state) {\n      return state.cityFavorites;\n    },\n  },\n  mutations: {\n    setCityWeather(state, payload) {\n      state.cityWeather = payload;\n      // console.log(state.cityWeather);\n    },\n    addCityFavorite(state) {\n      const newFavCity = {\n        name: state.cityWeather[0].location.name,\n        country: state.cityWeather[0].location.country,\n      };\n\n      state.cityFavorites.push(newFavCity);\n      console.log(state.cityFavorites);\n      console.log(state.cityFavorites.map((el) => el.name));\n\n      // localStorage.setItem(\n      //   \"cityFavorites\",\n      //   JSON.stringify(state.cityFavorites)\n      // );\n      // state.cityFavorites = JSON.parse(localStorage.getItem(\"cityFavorites\"));\n    },\n    setShowFavorites(state) {\n      state.showFavorites = !state.showFavorites;\n    },\n  },\n  actions: {\n    async fetchCityWeather({ commit }, city) {\n      const response = await fetch(\n        `http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=7e918318a291df997bd192ca77406428`\n      );\n      const data = await response.json();\n\n      // function convertToCelcius(kelvin) {\n      //   return Math.round(kelvin - 273.15);\n      // }\n\n      const weatherArr = [];\n\n      data.list.map((element, index) => {\n        const dateApiFormatted = element.dt_txt.substring(0, 10);\n        const dayIndex = new Date(dateApiFormatted).getDay();\n        const days = [\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n          \"Sunday\",\n        ];\n\n        const weekDay = dayIndex - 1 >= 0 ? days[dayIndex - 1] : days[6];\n\n        if (index === 0 || index % 8 === 0) {\n          // console.log(index);\n          // console.log(element.dt_txt);\n\n          const cityWeather = {\n            date: weekDay,\n            location: {\n              name: data.city.name,\n              country: data.city.country,\n            },\n\n            temperature: {\n              main: element.main.temp,\n              min: element.main.temp_min,\n              max: element.main.temp_max,\n              // main: convertToCelcius(element.main.temp),\n              // min: convertToCelcius(element.main.temp_min),\n              // max: convertToCelcius(element.main.temp_max),\n            },\n\n            highlight: {\n              main: element.weather[0].main,\n              description: element.weather[0].description,\n              id: element.weather[0].id,\n              pressure: element.main.pressure,\n              humidity: element.main.humidity,\n              cloudCoverage: element.clouds.all,\n              windSpeed: element.wind.speed,\n            },\n            icon: `http://openweathermap.org/img/w/${element.weather[0].icon}.png`,\n          };\n\n          weatherArr.push(cityWeather);\n        }\n      });\n\n      commit(\"setCityWeather\", weatherArr);\n    },\n  },\n  modules: {},\n});\n"]}]}