{"remainingRequest":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js!/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js??ref--13-0!/Users/theogilardo/Desktop/weather-app/src/store/index.js","dependencies":[{"path":"/Users/theogilardo/Desktop/weather-app/src/store/index.js","mtime":1594499816000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/theogilardo/Desktop/weather-app/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/theogilardo/Desktop/weather-app/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","cityWeather","cityFavorites","showFavorites","showFavoritesBtn","getters","getCityWeather","getShowFavorites","getShowFavoritesBtn","getCityFavorites","mutations","setCelsius","forEach","el","temperature","main","Math","trunc","setFahrenheit","refreshCities","JSON","parse","localStorage","getItem","setCityWeather","payload","addCityFavorite","newFavCity","name","location","country","push","setItem","stringify","setShowFavorites","setShowFavoritesBtn","length","removeCityFavorite","city","console","log","filter","actions","fetchCityWeather","commit","fetch","response","json","data","weatherArr","list","map","element","index","dateApiFormatted","dt_txt","substring","dayIndex","Date","getDay","days","weekDay","date","floor","temp","min","temp_min","max","temp_max","highlight","weather","description","id","pressure","humidity","cloudCoverage","clouds","all","windSpeed","wind","speed","icon","modules"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    cityWeather: [],\n    cityFavorites: [],\n    showFavorites: false,\n    showFavoritesBtn: false,\n  },\n  getters: {\n    getCityWeather(state) {\n      return state.cityWeather;\n    },\n    getShowFavorites(state) {\n      return state.showFavorites;\n    },\n    getShowFavoritesBtn(state) {\n      return state.showFavoritesBtn;\n    },\n    getCityFavorites(state) {\n      return state.cityFavorites;\n    },\n  },\n  mutations: {\n    setCelsius(state) {\n      state.cityWeather.forEach(\n        (el) =>\n          // (32°F − 32) × 5/9 = 0°C\n          (el.temperature.main = Math.trunc(\n            ((el.temperature.main - 32) * 5) / 9\n          ))\n      );\n    },\n    setFahrenheit(state) {\n      state.cityWeather.forEach(\n        (el) =>\n          (el.temperature.main = Math.trunc((el.temperature.main * 9) / 5 + 32))\n      );\n    },\n    refreshCities(state) {\n      state.cityFavorites = JSON.parse(localStorage.getItem(\"cityFavorites\"));\n    },\n    setCityWeather(state, payload) {\n      state.cityWeather = payload;\n    },\n    addCityFavorite(state) {\n      const newFavCity = {\n        name: state.cityWeather[0].location.name,\n        country: state.cityWeather[0].location.country,\n      };\n\n      state.cityFavorites.push(newFavCity);\n\n      localStorage.setItem(\n        \"cityFavorites\",\n        JSON.stringify(state.cityFavorites)\n      );\n    },\n    setShowFavorites(state) {\n      state.showFavorites = !state.showFavorites;\n    },\n    setShowFavoritesBtn(state) {\n      if (state.cityFavorites.length >= 1) {\n        state.showFavoritesBtn = true;\n      } else if (localStorage.getItem(\"cityFavorites\").length !== 2) {\n        state.showFavoritesBtn = true;\n      } else {\n        state.showFavoritesBtn = false;\n      }\n    },\n    removeCityFavorite(state, city) {\n      console.log(state.cityFavorites);\n      state.cityFavorites = state.cityFavorites.filter(\n        (el) => el.name !== city\n      );\n\n      localStorage.setItem(\n        \"cityFavorites\",\n        JSON.stringify(state.cityFavorites)\n      );\n\n      if (state.cityFavorites.length === 0) {\n        state.showFavoritesBtn = false;\n        state.showFavorites = false;\n      }\n    },\n  },\n  actions: {\n    async fetchCityWeather({ commit }, city) {\n      const response = await fetch(\n        `http://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=7e918318a291df997bd192ca77406428`\n      );\n      const data = await response.json();\n\n      // function convertToCelcius(kelvin) {\n      //   return Math.round(kelvin - 273.15);\n      // }\n\n      const weatherArr = [];\n\n      data.list.map((element, index) => {\n        const dateApiFormatted = element.dt_txt.substring(0, 10);\n        const dayIndex = new Date(dateApiFormatted).getDay();\n        const days = [\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n          \"Sunday\",\n        ];\n\n        const weekDay = dayIndex - 1 >= 0 ? days[dayIndex - 1] : days[6];\n\n        if (index === 0 || index % 8 === 0) {\n          // console.log(index);\n          // console.log(element.dt_txt);\n\n          const cityWeather = {\n            date: weekDay,\n            location: {\n              name: data.city.name,\n              country: data.city.country,\n            },\n\n            temperature: {\n              main: Math.floor(element.main.temp - 273.15),\n              min: Math.floor(element.main.temp_min - 273.15),\n              max: Math.floor(element.main.temp_max - 273.15),\n              // main: convertToCelcius(element.main.temp),\n              // min: convertToCelcius(element.main.temp_min),\n              // max: convertToCelcius(element.main.temp_max),\n            },\n\n            highlight: {\n              main: element.weather[0].main,\n              description: element.weather[0].description,\n              id: element.weather[0].id,\n              pressure: element.main.pressure,\n              humidity: element.main.humidity,\n              cloudCoverage: element.clouds.all,\n              windSpeed: element.wind.speed,\n            },\n            icon: `http://openweathermap.org/img/w/${element.weather[0].icon}.png`,\n          };\n\n          weatherArr.push(cityWeather);\n        }\n      });\n\n      commit(\"setCityWeather\", weatherArr);\n    },\n  },\n  modules: {},\n});\n"]}]}